BeforeInstallPromptEvent
	isTrusted: true
	bubbles: false
	cancelBubble: false
	cancelable: true
	composed: false
	currentTarget: Window
		$: ∆í (e,t)
		Animation: ∆í lt(o,e,t)
		prefilter: ∆í (e,t)
		length: 2
		name: "prefilter"
		prototype: {constructor: ∆í}
		arguments: (...)
		caller: (...)
		[[FunctionLocation]]: jquery-3.6.0.min.js:2
		[[Prototype]]: ∆í ()
		[[Scopes]]: Scopes[3]
		prefilters: [∆í]
		tweener: ∆í (e,t)
		tweeners: {*: Array(1)}
		length: 3
		name: "lt"
		prototype: {constructor: ∆í}
		arguments: (...)
		caller: (...)
		[[FunctionLocation]]: jquery-3.6.0.min.js:2
		[[Prototype]]: ∆í ()
		[[Scopes]]: Scopes[3]
		Callbacks: ∆í (r)
		Deferred: ∆í (e)
		Event: ∆í (e,t)
		Tween: ∆í Ke(e,t,n,r,i)
		active: 0
		ajax: ∆í (e,t)
		ajaxPrefilter: ∆í (e,t)
		ajaxSettings: {url: 'https://pwa.dev/', type: 'GET', isLocal: false, global: true, processData: true, ‚Ä¶}
		ajaxSetup: ∆í (e,t)
		ajaxTransport: ∆í (e,t)
		attr: ∆í (e,t,n)
		attrHooks: {type: {‚Ä¶}}
		camelCase: ∆í X(e)
		cleanData: ∆í (e)
		clone: ∆í (e,t,n)
		contains: ∆í (e,t)
		css: ∆í (e,t,n,r)
		cssHooks: {opacity: {‚Ä¶}, height: {‚Ä¶}, width: {‚Ä¶}, marginLeft: {‚Ä¶}, margin: {‚Ä¶}, ‚Ä¶}
		cssNumber: {animationIterationCount: true, columnCount: true, fillOpacity: true, flexGrow: true, flexShrink: true, ‚Ä¶}
		cssProps: {}
		data: ∆í (e,t,n)
		dequeue: ∆í (e,t)
		each: ∆í (e,t)
		easing: {_default: 'swing', linear: ∆í, swing: ∆í}
		error: ∆í (e)
		escapeSelector: ∆í (e)
		etag: {}
		event: {global: {‚Ä¶}, add: ∆í, remove: ∆í, dispatch: ∆í, handlers: ∆í, ‚Ä¶}
		expando: "jQuery360006406424067312666"
		expr: {cacheLength: 50, match: {‚Ä¶}, attrHandle: {‚Ä¶}, find: {‚Ä¶}, createPseudo: ∆í, ‚Ä¶}
		extend: ∆í ()
		filter: ∆í (e,t,n)
		find: ∆í se(t,e,n,r)
		fn: Object [jquery: '3.6.0', constructor: ∆í, toArray: ∆í, get: ∆í, pushStack: ∆í, ‚Ä¶]
		fx: ∆í (e,t,n,r,i,o)
		get: ∆í (e,t,n,r)
		getJSON: ∆í (e,t,n)
		getScript: ∆í (e,t)
		globalEval: ∆í (e,t,n)
		grep: ∆í (e,t,n)
		guid: 3
		hasData: ∆í (e)
		holdReady: ∆í (e)
		htmlPrefilter: ∆í (e)
		inArray: ∆í (e,t,n)
		isArray: ∆í isArray()
		isEmptyObject: ∆í (e)
		isFunction: ∆í (e)
		isNumeric: ∆í (e)
		isPlainObject: ∆í (e)
		isReady: true
		isWindow: ∆í (e)
		isXMLDoc: ∆í (e)
		lastModified: {}
		makeArray: ∆í (e,t)
		map: ∆í (e,t,n)
		merge: ∆í (e,t)
		noConflict: ∆í (e)
		nodeName: ∆í A(e,t)
		noop: ∆í ()
		now: ∆í now()
		offset: {setOffset: ∆í}
		param: ∆í (e,t)
		parseHTML: ∆í (e,t,n)
		parseJSON: ∆í parse()
		parseXML: ∆í (e)
		post: ∆í (e,t,n,r)
		prop: ∆í (e,t,n)
		propFix: {for: 'htmlFor', class: 'className', tabindex: 'tabIndex', readonly: 'readOnly', maxlength: 'maxLength', ‚Ä¶}
		propHooks: {tabIndex: {‚Ä¶}}
		proxy: ∆í (e,t)
		queue: ∆í (e,t,n)
		ready: ∆í (e)
		readyException: ∆í (e)
		readyWait: 0
		removeAttr: ∆í (e,t)
		removeData: ∆í (e,t)
		removeEvent: ∆í (e,t,n)
		speed: ∆í (e,t,n)
		style: ∆í (e,t,n,r)
		support: {checkClone: true, noCloneChecked: true, option: true, clearCloneStyle: true, boxSizingReliable: ∆í, ‚Ä¶}
		text: ∆í (e)
		timers: []
		trim: ∆í (e)
		type: ∆í w(e)
		unique: ∆í (e)
		uniqueSort: ∆í (e)
		valHooks: {option: {‚Ä¶}, select: {‚Ä¶}, radio: {‚Ä¶}, checkbox: {‚Ä¶}}
		when: ∆í (e)
		_data: ∆í (e,t,n)
		_evalUrl: ∆í (e,t,n)
		_queueHooks: ∆í (e,t)
		_removeData: ∆í (e,t)
		length: 2
		name: "S"
		prototype: Object [jquery: '3.6.0', constructor: ∆í, toArray: ∆í, get: ∆í, pushStack: ∆í, ‚Ä¶]
		arguments: (...)
		caller: (...)
		[[FunctionLocation]]: jquery-3.6.0.min.js:2
		[[Prototype]]: ∆í ()
		[[Scopes]]: Scopes[3]
		alert: ∆í alert()
		aniTit: ∆í aniTit()
		anirun: false
		arses: "<h2>1. Preparation</h2>\n<blockquote>\n<p>‚ö† Before you continue, make sure you can afford a <strong>web server</strong> able to run in <strong>https</strong>.\nEven it only for testing in your local machine.\nOtherwise, <em>‚ô™ say good night and go‚Ä¶ ‚ô™</em>, forget this PWA üí©.</p>\n</blockquote>\n<p>Place your <em>plain web site</em> files in a web server directory.<br>Test <code>https://your.site/</code>, make sure it runs properly before carry on.<br>Don&#39;t bother do an offline test, obviously won&#39;t work for now.  </p>\n<h2>2. Manifestation</h2>\n<p>üìÑ Create a new file named <code>manifest.json</code> and link it to your <code>index.html</code> in the <code>&lt;head&gt;</code> section.  </p>\n<pre><code class=\"language-html\">&lt;link rel=&quot;manifest&quot; href=&quot;manifest.json&quot;&gt;\n</code></pre>\n<p>üìù Edit <code>manifest.json</code>, write this template:   </p>\n<pre><code class=\"language-json\">{\n    &quot;name&quot;: &quot;Progressive Web Apps ‚ô™ step-by-step ooh baby‚Ä¶ ‚ô™&quot;,\n    &quot;short_name&quot;: &quot;PWA üë£&quot;,\n    &quot;icons&quot;: [\n        {\n            &quot;src&quot;: &quot;/ass/ico36.png&quot;,\n            &quot;sizes&quot;: &quot;36x36&quot;,\n            &quot;type&quot;: &quot;image/png&quot;,\n            &quot;density&quot;: 0.75\n        },\n        {\n            &quot;src&quot;: &quot;/ass/ico48.png&quot;,\n            &quot;sizes&quot;: &quot;48x48&quot;,\n            &quot;type&quot;: &quot;image/png&quot;,\n            &quot;density&quot;: 1.0\n        },\n        {\n            &quot;src&quot;: &quot;/ass/ico72.png&quot;,\n            &quot;sizes&quot;: &quot;72x72&quot;,\n            &quot;type&quot;: &quot;image/png&quot;,\n            &quot;density&quot;: 1.5\n        },\n        {\n            &quot;src&quot;: &quot;/ass/ico96.png&quot;,\n            &quot;sizes&quot;: &quot;96x96&quot;,\n            &quot;type&quot;: &quot;image/png&quot;,\n            &quot;density&quot;: 2.0\n        },\n        {\n            &quot;src&quot;: &quot;/ass/ico144.png&quot;,\n            &quot;sizes&quot;: &quot;144x144&quot;,\n            &quot;type&quot;: &quot;image/png&quot;,\n            &quot;density&quot;: 3.0\n        },\n        {\n            &quot;src&quot;: &quot;/ass/ico384.png&quot;,\n            &quot;sizes&quot;: &quot;384x384&quot;,\n            &quot;type&quot;: &quot;image/png&quot;\n        }\n    ],\n    &quot;id&quot;: &quot;/&quot;,\n    &quot;start_url&quot;: &quot;/&quot;,\n    &quot;display&quot;: &quot;standalone&quot;\n}\n</code></pre>\n<blockquote>\n<p>As you can see above, we need to belatedly create those png images for your app shortcut icon.</p>\n</blockquote>\n<h4>iOS Compatibility</h4>\n<blockquote>\n<p>If you don&#39;t give a üí© for iOS compatibility, skip this step.</p>\n</blockquote>\n<p>iOS does not use the icons from PWA manifest file, thus we need to create another series of png images as minimum as follow:</p>\n<pre><code class=\"language-html\">&lt;!-- iOS üí© --&gt;\n&lt;link rel=&quot;apple-touch-icon&quot; href=&quot;ass/touch-icon-iphone.png&quot;&gt;\n&lt;link rel=&quot;apple-touch-icon&quot; sizes=&quot;152x152&quot; href=&quot;ass/touch-icon-ipad.png&quot;&gt;\n&lt;link rel=&quot;apple-touch-icon&quot; sizes=&quot;167x167&quot; href=&quot;ass/touch-icon-ipad-retina.png&quot;&gt;\n&lt;link rel=&quot;apple-touch-icon&quot; sizes=&quot;180x180&quot; href=&quot;ass/touch-icon-iphone-retina.png&quot;&gt;\n</code></pre>\n<p>place this code in the <code>&lt;head&gt;</code> section of your <code>index.html</code>  </p>\n<blockquote>\n<p>‚ö† Avoid icons with transparency - those will not work.</p>\n</blockquote>\n<h2>3. Insemination</h2>\n<p>Now let the party begins! üéâ<br>Start with a magic spell written in Javascript as below:  </p>\n<pre><code class=\"language-js\">//The service worker file name &amp; location\nconst SVCWRK = &#39;svc.js&#39;;\n/* \nTo make your life easier, just put the service worker file in root dir.\nOtherwise, you might have to struggle more as described in the error log below: \nDOMException: Failed to register a ServiceWorker for scope (&#39;https://your.site/&#39;) \nwith script (&#39;https://your.site/ass/svc.js&#39;): \nThe path of the provided scope (&#39;/&#39;) \nis not under the max scope allowed (&#39;/ass/&#39;). \nAdjust the scope, move the Service Worker script, \nor use the Service-Worker-Allowed HTTP header to allow the scope.\n*/\n//Check first, whether the browser support &#39;navigator&#39;, otherwise, bye.\nif (&quot;serviceWorker&quot; in navigator) {\n    window.addEventListener(&quot;load&quot;, function() {\n        navigator.serviceWorker\n            .register(SVCWRK, { scope: &quot;/&quot; })\n            .then(res =&gt; console.log(&quot;service worker registered.. &quot;, res))\n            .catch(err =&gt; console.error(&quot;service worker not registered.. &quot;, err))\n    })\n}\n</code></pre>\n<p>place this code in the <code>&lt;body&gt;</code> section of your <code>index.html</code>  </p>\n<blockquote>\n<p>In this example, I put this in a separate file <code>jss/eek.js</code>.</p>\n</blockquote>\n<p>üìÑ Then create a new file for the <strong>service worker</strong> called by script above, <code>svc.js</code><br>üìù Edit it with this template:  </p>\n<pre><code class=\"language-js\">/* \nAny update on the site, change CHNAME below, \nso all caches will be replaced on &#39;activate&#39; handler\n*/\nconst CHNAME = &#39;pwa202310300241&#39;;\n// List all the required files/resources\n/* It&#39;s okay to have some files being forgotten, add them later. \nConsole log will tell you what file needed like below:\nFailed to load ‚Äòhttps://your.site/manifest.json‚Äô. \nA ServiceWorker passed a promise to FetchEvent.respondWith() that rejected \nwith ‚ÄòTypeError: NetworkError when attempting to fetch resource.‚Äô. */\nconst ASSETS = [\n    &#39;./&#39;,\n    &#39;index.html&#39;,\n    &#39;favicon.ico&#39;,\n    &#39;README.md&#39;,\n    &#39;./css/github-markdown.css&#39;,\n    &#39;./css/ssc.css&#39;,\n    &#39;./jss/jquery-3.6.0.min.js&#39;,\n    &#39;./jss/marked.min.js&#39;,\n    &#39;./jss/eek.js&#39;\n];\n// The install handler takes care of precaching the resources\nself.addEventListener(&#39;install&#39;, (evt) =&gt; {\n    evt.waitUntil(\n        caches.open(CHNAME).then(cache =&gt; {\n            cache.addAll(ASSETS)\n        }).then(self.skipWaiting())\n    )\n});\n// The activate handler takes care of cleaning up old caches\nself.addEventListener(&quot;activate&quot;, (evt) =&gt; {\n    const CURCHC = [CHNAME];\n    evt.waitUntil(\n        caches.keys().then(keys =&gt; {\n            return keys.filter(key =&gt; !CURCHC.includes(key))\n        }).then(keys =&gt; {\n            return Promise.all(keys.map(key =&gt; {\n                return caches.delete(key)\n            }))\n        }).then(() =&gt; self.clients.claim())\n    )\n});\n// The fetch handler serves responses of resources from a cache\nself.addEventListener(&#39;fetch&#39;, (evt) =&gt; {\n    evt.respondWith(\n        caches.match(evt.request).then(res =&gt; {\n            return res || fetch(evt.request)\n        })\n    )\n});\n</code></pre>\n"
		asses: "ü§¶‚Äç‚ôÇÔ∏è<pre>Ouch‚Ä¶ It's not working this way. Please <b>run this site on a web server</b>.</pre>ü¶ä<pre class=\"err\">‚ö† Cross-Origin Request Blocked: The Same Origin Policy disallows reading the remote resource at file:///‚Ä¶/README.md. (Reason: CORS request not http).</pre>ü§¨<pre class=\"war\">Why would it indiscriminately be blocked? First of all, it's a local file. By definition it's not even a remote file! Have you ever think of a better solution, like prompting user to allow/disallow this? Do you think all web users are dumb? This's just dumb!</pre>ü§∑‚Äç‚ôÇÔ∏è<pre>Well‚Ä¶ I agree. But don't ask me. Ask your browser.</pre>ü¶ä<pre class=\"err\">.</pre>üò°<pre class=\"war\">I will just build my own browser then!</pre>üôé‚Äç‚ôÇÔ∏è<pre>My advice.. don't. You might only wasting your energy. Once it's launched, it would be banned anyway.</pre>"
		atob: ∆í atob()
		blur: ∆í blur()
		btoa: ∆í btoa()
		caches: CacheStorage {}
		cancelAnimationFrame: ∆í cancelAnimationFrame()
		cancelIdleCallback: ∆í cancelIdleCallback()
		captureEvents: ∆í captureEvents()
		chrome: {loadTimes: ∆í, csi: ∆í}
		clearInterval: ∆í clearInterval()
		clearTimeout: ∆í clearTimeout()
		clientInformation: Navigator {vendorSub: '', productSub: '20030107', vendor: 'Google Inc.', maxTouchPoints: 0, userActivation: UserActivation, ‚Ä¶}
		close: ∆í close()
		closed: false
		confirm: ∆í confirm()
		cookieStore: CookieStore {onchange: null}
		createImageBitmap: ∆í createImageBitmap()
		crossOriginIsolated: false
		crypto: Crypto {subtle: SubtleCrypto}
		customElements: CustomElementRegistry {}
		defaultStatus: ""
		defaultstatus: ""
		devicePixelRatio: 1
		document: document
		external: External {}
		fetch: ∆í fetch()
		find: ∆í find()
		focus: ∆í focus()
		frameElement: null
		frames: Window {window: Window, self: Window, document: document, name: '', location: Location, ‚Ä¶}
		getComputedStyle: ∆í getComputedStyle()
		getScreenDetails: ∆í getScreenDetails()
		getSelection: ∆í getSelection()
		history: History {length: 2, scrollRestoration: 'auto', state: null}
		iOStog: ∆í iOStog()
		indexedDB: IDBFactory {}
		innerHeight: 626
		innerWidth: 532
		isSecureContext: true
		jQuery: ∆í (e,t)
		launchQueue: LaunchQueue {}
		length: 0
		localStorage: Storage {length: 0}
		location: Location {ancestorOrigins: DOMStringList, href: 'https://pwa.dev/', origin: 'https://pwa.dev', protocol: 'https:', host: 'pwa.dev', ‚Ä¶}
		locationbar: BarProp {visible: true}
		marked: {defaults: {‚Ä¶}, Hooks: ∆í, Lexer: ∆í, Marked: ∆í, Parser: ∆í, ‚Ä¶}
		matchMedia: ∆í matchMedia()
		mdfile: "README.md"
		menubar: BarProp {visible: true}
		moveBy: ∆í moveBy()
		moveTo: ∆í moveTo()
		name: ""
		navigation: Navigation {currentEntry: NavigationHistoryEntry, transition: null, canGoBack: false, canGoForward: false, onnavigate: null, ‚Ä¶}
		navigator: Navigator {vendorSub: '', productSub: '20030107', vendor: 'Google Inc.', maxTouchPoints: 0, userActivation: UserActivation, ‚Ä¶}
		onabort: null
		onafterprint: null
		onanimationend: null
		onanimationiteration: null
		onanimationstart: null
		onappinstalled: null
		onauxclick: null
		onbeforeinstallprompt: null
		onbeforematch: null
		onbeforeprint: null
		onbeforeunload: null
		onbeforexrselect: null
		onblur: null
		oncancel: null
		oncanplay: null
		oncanplaythrough: null
		onchange: null
		onclick: null
		onclose: null
		oncontextlost: null
		oncontextmenu: null
		oncontextrestored: null
		oncuechange: null
		ondblclick: null
		ondevicemotion: null
		ondeviceorientation: null
		ondeviceorientationabsolute: null
		ondrag: null
		ondragend: null
		ondragenter: null
		ondragleave: null
		ondragover: null
		ondragstart: null
		ondrop: null
		ondurationchange: null
		onemptied: null
		onended: null
		onerror: null
		onfocus: null
		onformdata: null
		ongotpointercapture: null
		onhashchange: null
		oninput: null
		oninvalid: null
		onkeydown: null
		onkeypress: null
		onkeyup: null
		onlanguagechange: null
		onload: null
		onloadeddata: null
		onloadedmetadata: null
		onloadstart: null
		onlostpointercapture: null
		onmessage: null
		onmessageerror: null
		onmousedown: null
		onmouseenter: null
		onmouseleave: null
		onmousemove: null
		onmouseout: null
		onmouseover: null
		onmouseup: null
		onmousewheel: null
		onoffline: null
		ononline: null
		onpagehide: null
		onpageshow: null
		onpause: null
		onplay: null
		onplaying: null
		onpointercancel: null
		onpointerdown: null
		onpointerenter: null
		onpointerleave: null
		onpointermove: null
		onpointerout: null
		onpointerover: null
		onpointerrawupdate: null
		onpointerup: null
		onpopstate: null
		onprogress: null
		onratechange: null
		onrejectionhandled: null
		onreset: null
		onresize: null
		onscroll: null
		onsearch: null
		onsecuritypolicyviolation: null
		onseeked: null
		onseeking: null
		onselect: null
		onselectionchange: null
		onselectstart: null
		onslotchange: null
		onstalled: null
		onstorage: null
		onsubmit: null
		onsuspend: null
		ontimeupdate: null
		ontoggle: null
		ontransitioncancel: null
		ontransitionend: null
		ontransitionrun: null
		ontransitionstart: null
		onunhandledrejection: null
		onunload: null
		onvolumechange: null
		onwaiting: null
		onwebkitanimationend: null
		onwebkitanimationiteration: null
		onwebkitanimationstart: null
		onwebkittransitionend: null
		onwheel: null
		open: ∆í open()
		openDatabase: ∆í openDatabase()
		opener: null
		origin: "https://pwa.dev"
		originAgentCluster: false
		outerHeight: 714
		outerWidth: 1049
		pageXOffset: 0
		pageYOffset: 0
		parent: Window {window: Window, self: Window, document: document, name: '', location: Location, ‚Ä¶}
		performance: Performance {timeOrigin: 1699328392877.2, onresourcetimingbufferfull: null, timing: PerformanceTiming, navigation: PerformanceNavigation, memory: MemoryInfo, ‚Ä¶}
		personalbar: BarProp {visible: true}
		postMessage: ∆í postMessage()
		print: ∆í print()
		prompt: ∆í prompt()
		length: 0
		name: "prompt"
		arguments: (...)
		caller: (...)
		[[Prototype]]: ∆í ()
		[[Scopes]]: Scopes[0]
		queueMicrotask: ∆í queueMicrotask()
		releaseEvents: ∆í releaseEvents()
		reportError: ∆í reportError()
		requestAnimationFrame: ∆í requestAnimationFrame()
		requestIdleCallback: ∆í requestIdleCallback()
		resizeBy: ∆í resizeBy()
		resizeTo: ∆í resizeTo()
		scheduler: Scheduler {}
		screen: Screen {availWidth: 1360, availHeight: 728, width: 1360, height: 768, colorDepth: 24, ‚Ä¶}
		screenLeft: 259
		screenTop: 18
		screenX: 259
		screenY: 18
		(...)
	defaultPrevented: false
	eventPhase: 0
	path: [Window]
	platforms: ['web']
	returnValue: true
	srcElement: Window {window: Window, self: Window, document: document, name: '', location: Location, ‚Ä¶}
	target: Window {window: Window, self: Window, document: document, name: '', location: Location, ‚Ä¶}
	timeStamp: 287.09999999403954
	type: "beforeinstallprompt"
	userChoice: Promise {<pending>}
	[[Prototype]]: BeforeInstallPromptEvent